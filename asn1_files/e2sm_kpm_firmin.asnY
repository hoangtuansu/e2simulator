-- ASN1START
-- **************************************************************
-- E2SM-KPM Information Element Definitions
-- **************************************************************
E2SM-KPM-IEs {
iso(1) identified-organization(3) dod(6) internet(1) private(4) enterprise(1) 53148 e2(1) version2(2) e2sm(2) e2sm-KPMMON-IEs (2)}
DEFINITIONS AUTOMATIC TAGS ::= BEGIN
-- **************************************************************
-- IEs
-- **************************************************************
IMPORTS
CGI,
FiveQI,
PLMNIdentity,
QCI,
QosFlowIdentifier,
RANfunction-Name,
RIC-Format-Type,
RIC-Style-Name,
RIC-Style-Type,
S-NSSAI,
UEID,
Beam-ID
FROM E2SM-COMMON-IEs;
TimeStamp ::= OCTET STRING (SIZE(8))
BinIndex ::= INTEGER (1.. 65535, ...)
BinRangeValue ::= CHOICE {
valueInt INTEGER,
valueReal REAL,
...
}
JobID ::= INTEGER (1.. 65535)
GranularityPeriod ::= INTEGER (1.. 4294967295)
LogicalOR ::= ENUMERATED { true, ...}
MeasurementType ::= CHOICE {
measName MeasurementTypeName,
measID MeasurementTypeID,
...
}
MeasurementTypeName ::= PrintableString(SIZE(1.. 150, ...))
MeasurementTypeID ::= INTEGER (1.. 65536, ...)
MeasurementLabel ::= SEQUENCE {
noLabel ENUMERATED { true, ...} OPTIONAL,
plmnID PLMNIdentity OPTIONAL,
sliceID S-NSSAI OPTIONAL,
fiveQI FiveQI OPTIONAL,
qFI QosFlowIdentifier OPTIONAL,
qCI QCI OPTIONAL,
qCImax QCI OPTIONAL,
qCImin QCI OPTIONAL,
aRPmax INTEGER (1.. 15, ...) OPTIONAL,
aRPmin INTEGER (1.. 15, ...) OPTIONAL,
bitrateRange INTEGER (1.. 65535, ...) OPTIONAL,
layerMU-MIMO INTEGER (1.. 65535, ...) OPTIONAL,
sUM ENUMERATED { true, ...} OPTIONAL,
distBinX INTEGER (1.. 65535, ...) OPTIONAL,
distBinY INTEGER (1.. 65535, ...) OPTIONAL,
distBinZ INTEGER (1.. 65535, ...) OPTIONAL,
preLabelOverride ENUMERATED { true, ...} OPTIONAL,
startEndInd ENUMERATED { start, end, ...} OPTIONAL,
min ÉNUMÉRÉ { vrai, ...} FACULTATIF,
max ÉNUMÉRÉ {vrai, ...} FACULTATIF,
avg ENUMERATED { true, ...} FACULTATIF,
ssbIndex INTEGER (1.. 65535, ...) FACULTATIF,
nonGoB-BFmode-Index INTEGER (1.. 65535, ...) FACULTATIF,
mIMO-mode-Index INTEGER (1.. 2, ...) FACULTATIF,
cellGlobalID CGI FACULTATIF,
beamID Beam-ID FACULTATIF,
TestCondInfo ::= SÉQUENCE {
testType TestCond-Type,
testExpr TestCond-Expression FACULTATIF,
testValue TestCond-Value FACULTATIF,
TestCond-Type ::= CHOIX {
gBR ÉNUMÉRÉ { vrai, ...},
aMBR ÉNUMÉRÉ { vrai, ...},
isCatM ÉNUMÉRÉ { vrai, ...},
rSRP ÉNUMÉRÉ { vrai, ...},
rSRQ ÉNUMÉRÉ { vrai, ...},
ul-rSRP ÉNUMÉRÉ { vrai, ...},
cQI ÉNUMÉRÉ { vrai, ...},
fiveQI ÉNUMÉRÉ { vrai, ...},
qCI ÉNUMÉRÉ { vrai, ...},
sNSSAI ÉNUMÉRÉ { vrai, ...},
...
}
TestCond-Expression ::= ÉNUMÉRÉ {
égal,
valueBitS CHAÎNE DE BITS,
valueOctS CHAÎNE D'OCTETS,
valuePrtS Chaîne imprimable,
valeurRéelle RÉELLE,
...
}
MultiReportApproach ::= ÉNUMÉRÉ {
célibataire,
binIndex BinIndex,
startValue BinRangeValue,
endValue BinRangeValue,
...
}
DistMeasurementBinRangeList ::= SÉQUENCE (TAILLE(1..maxnoofMeasurementInfo)) DE DistMeasurementBinRangeItem
DistMeasurementBinRangeItem ::= SÉQUENCE {
MeasurementInfoItem ::= SÉQUENCE {
measType Type de mesure,
labelInfoList LabelInfoList,
matchCondReportList MatchCondReportList FACULTATIF,
...,
}
LabelInfoList ::= SÉQUENCE (TAILLE(1..maxnoofLabelInfo)) DE LabelInfoItem
LabelInfoItem ::= SÉQUENCE {
entier ENTIER (0.. 4294967295),
vrai VRAI,
noValue NULL,
non satisfait NULL
...,
}
MeasurementInfo-Action-List ::= SÉQUENCE (TAILLE(1..maxnoofMeasurementInfo)) DE MeasurementInfo-Action-Item
MeasurementInfo-Action-Item ::= SÉQUENCE {
measName MeasurementTypeName,
measID MeasurementTypeID FACULTATIF,
binRangeDef BinRangeDefinition FACULTATIF,
...,
}
MeasurementCondList ::= SÉQUENCE (TAILLE(1..maxnoofMeasurementInfo)) DE MeasurementCondItem
MeasurementCondItem ::= SÉQUENCE {
measType Type de mesure,
matchingCond MatchingCondList,
binRangeDef BinRangeDefinition FACULTATIF,
...,
}
MeasurementCondUEidList ::= SÉQUENCE (TAILLE(1..maxnoofMeasurementInfo)) DE MeasurementCondUEidItem
MeasurementCondUEidItem ::= SÉQUENCE {
measType Type de mesure,
matchingCond MatchingCondList,
matchingUEidList MatchingUEidList FACULTATIF,
matchingUEidPerGP MatchingUEidPerGP FACULTATIF,
...,
}
MatchingCondList ::= SÉQUENCE (TAILLE(1..maxnoofConditionInfo)) DE MatchingCondItem
MatchingCondItem ::= SÉQUENCE {
matchedPerGP CHOIX {
noUEmatched ÉNUMÉRÉ { vrai, ...},
oneOrMoreUEmatched Liste d'identifiants d'UE correspondants par GP,
... ,
}
...
}
MatchingUEidList-PerGP ::= SÉQUENCE (TAILLE(1..maxnoofUEID)) DE MatchingUEidItem-PerGP
MatchingUeCondPerSubList ::= SÉQUENCE (TAILLE(1..maxnoofConditionInfoPerSub)) DE MatchingUeCondPerSubItem
MatchingUeCondPerSubItem ::= SÉQUENCE {
testCondInfo TestCondInfo,
logiqueOU LogiqueOU FACULTATIF,
...,
}
MatchingUEidPerSubList ::= SÉQUENCE (TAILLE(2..maxnoofUEIDPerSub)) DE MatchingUEidPerSubItem
MatchingUEidPerSubItem ::= SÉQUENCE {
ueID UEID,
...,
actionDefinition-Format4 E2SM-KPM-ActionDefinition-Format4,
actionDefinition-Format5 E2SM-KPM-ActionDefinition-Format5,
actionDefinition-Format255 E2SM-KPM-ActionDefinition-Format255,
...
}
...
}
E2SM-KPM-ActionDefinition-Format1 ::= SÉQUENCE {
measInfoList MeasurementInfoList,
granulPeriod GranularitéPériode,
cellGlobalID CGI FACULTATIF,
distMeasBinRangeInfo DistMeasurementBinRangeList FACULTATIF,
...,
}
E2SM-KPM-ActionDefinition-Format2 ::= SÉQUENCE {
ueID UEID,
matchingUEidList MatchingUEidPerSubList,
subscriptionInfo E2SM-KPM-ActionDefinition-Format1,
...
} 
E2SM-KPM-ActionDefinition _ Format255 ::= SÉQUENCE {
Liste de définitions d'actions multiReport Liste de définitions d'actions multiReport,
Approche multi-rapports Approche multi-rapports,
commonActionDefinition E2SM-KPM-ActionDefinition FACULTATIF,
indicationMessage-Format2 E2SM-KPM-IndicationMessage-Format2,
...,
indicationMessage-Format3 E2SM-KPM-IndicationMessage-Format3,
indicationMessage-Format255 E2SM-KPM-IndicationMessage-Format255 ,
},
...,
jobID JobID FACULTATIF
ueMeasReportList UEMeasurementReportList,
...
}
E2SM-KPM-IndicationMessage _ Format255 ::= SÉQUENCE {
Liste de messages d'indication multiReport Liste de messages d'indication multiReport,
...
}
ric-IndicationHeaderFormat-Type RIC-Format-Type,
ric-IndicationMessageFormat-Type RIC-Format-Type,
...
} ,
RIC-IntegratedReportStyle-Item ::= SÉQUENCE {
ric-ReportStyle-Type RIC-Style-Type,
ric-ReportStyle-Name RIC-Style-Name,
}
FIN
-- ASN1STOP
