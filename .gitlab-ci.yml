include:
  - project: 'oran-ric/infra/cicd'
    file: '/.ci-common.yml'

stages:
  - sonarqube
  - build
  - deploy


sonarqube-check:
  stage: sonarqube  # Specifies that this job belongs to the 'sonarqube' stage
  image:
    name: sonarsource/sonar-scanner-cli:latest  # Uses the official SonarScanner CLI image
    entrypoint: [""]  # Resets the default entrypoint to avoid conflicts
  script:
    - echo "Running Sonarqube Analysis "  # Prints a message before analysis starts
    - export SONAR_HOST_URL=http://10.180.113.156:30744
    - export SONAR_TOKEN=squ_da7c06eac0bba17330fb7f3fce8a95397a4fd240
    - pwd
    - ls
    - |
      sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL  \
                    -Dsonar.projectKey=oran-ric_xapps_e2sim_80c73a76-5763-4467-a17f-10aa60ffdde7 \
                    -Dsonar.token=$SONAR_TOKEN  \
                    -Dsonar.sources=src,kpm_e2sm/src/kpm,rc_e2sm/src/rc \
                    -Dsonar.qualitygate.wait=true  # Ensures pipeline waits for quality gate results
  tags: 
    - oran-runner # Use your specific tag
  allow_failure: false  # If analysis fails, the pipeline will fail
  only:
    - main

build_job:
  extends: .build_template
  only:
    - tags
    - /^oran-student-.*/


deploy_job:
  stage: deploy
  when: manual
  image: bitnami/kubectl:1.32.2
  tags:
    - oran-runner # Use your specific tag
  script:
    - export IMAGE_NAME=$IMAGE_NAME
    - export IMAGE_TAG=$CI_COMMIT_SHA
    - export NAMESPACE=${CI_COMMIT_BRANCH#oran-student-}
    - echo $NAMESPACE
    - envsubst < helm/manifest.template.yaml > helm/manifest.yml
    - cat helm/manifest.yml
    - kubectl apply -f helm/manifest.yml -n $NAMESPACE
  only:
    - /^oran-student-.*/
  dependencies:
    - build_job
